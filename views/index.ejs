<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="" />
    <meta
      name="author"
      content="Mark Otto, Jacob Thornton, and Bootstrap contributors"
    />
    <meta name="generator" content="Hugo 0.84.0" />
    <title>Signin Template Â· Bootstrap v5.0</title>

    <link
      rel="canonical"
      href="https://getbootstrap.com/docs/5.0/examples/sign-in/"
    />

    <!-- Bootstrap core CSS -->
    <link
      href="/css/bootstrap.min.css"
      rel="stylesheet"
      crossorigin="anonymous"
    />

    <!-- Favicons -->
    <link
      rel="apple-touch-icon"
      href="/docs/5.0/assets/img/favicons/apple-touch-icon.png"
      sizes="180x180"
    />
    <link
      rel="icon"
      href="/docs/5.0/assets/img/favicons/favicon-32x32.png"
      sizes="32x32"
      type="image/png"
    />
    <link
      rel="icon"
      href="/docs/5.0/assets/img/favicons/favicon-16x16.png"
      sizes="16x16"
      type="image/png"
    />
    <link rel="manifest" href="/docs/5.0/assets/img/favicons/manifest.json" />
    <link
      rel="mask-icon"
      href="/docs/5.0/assets/img/favicons/safari-pinned-tab.svg"
      color="#7952b3"
    />
    <link rel="icon" href="/docs/5.0/assets/img/favicons/favicon.ico" />
    <meta name="theme-color" content="#7952b3" />

    <style>
      body {
        flex-direction: column;
      }
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }
      .result-wrapper {
        display: flex;
        justify-content: space-between;
        width: 60%;
        height: 500px;
      }
      .result-wrapper section {
        width: 40%;
        background: #e7e7e7cc;
        border: 2px solid #e7e0e0;
        border-radius: 6px;
        padding: 10px;
        overflow: auto;
        padding-top: 0px;
      }
      .result-wrapper section pre {
        text-align: left !important;
      }
      .result-wrapper section h4 {
        position: sticky;
        top: 0px;
        background: #e9e9e9;
        padding: 10px;
      }
      .form-signin {
        margin-bottom: 5% !important;
      }
      button {
        box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,
          rgba(0, 0, 0, 0.3) 0px 7px 13px -3px,
          rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
      }
    </style>

    <!-- Custom styles for this template -->
    <link href="/css/signin.css" rel="stylesheet" />
  </head>
  <body class="text-center">
    <main class="form-signin">
      <form id="policyForm">
        <h1 class="h3 mb-3 fw-normal">Get Policy</h1>

        <div class="form-floating mb-4">
          <input
            type="text"
            name="insureName"
            class="form-control"
            id="insureName"
            placeholder="tanasak"
            oninput="updateRequestBox()"
          />
          <label for="insureName">Name</label>
        </div>

        <button class="w-100 btn btn-lg btn-primary mb-4" type="submit">
          Submit
        </button>
      </form>
      <button class="w-100 btn btn-lg btn-outline-primary" onclick="fechAllCustomer()">
        (Debug) Fetch All
      </button>
    </main>
    <div class="result-wrapper">
      <section>
        <h4 class="mb-4">Request</h4>
        <pre id="requestJSON"><%= request %></pre>
      </section>
      <section>
        <h4 class="mb-4">Response</h4>
        <pre id="responseJSON"></pre>
      </section>
    </div>
    <button
      class="w-100 btn btn-lg btn-danger"
      style="position: fixed; top: 20px; right: 20px; width: 180px !important"
      onclick="location.href='/getrate';"
    >
      Calculate Rate
    </button>
  </body>
</html>

<script>
  async function fechAllCustomer() {
    let response = await fetch("/api/fetchall", {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    });

    let responseData = await response.json();
    document.getElementById("responseJSON").textContent = JSON.stringify(
      responseData,
      null,
      2
    );
  }
  function updateRequestBox() {
    let insureName = document.getElementById("insureName").value;
    let uniqueID = "56804752-470b-4d04-8813-88e25fb6672a"; // mock
    // let uniqueID = generateUniqueID();
    let now = formatDate(new Date().toISOString());

    let requestObj = {
      headerData: {
        messageID: uniqueID,
        sentDateTime: now,
      },
      requestRecord: {
        insureName: insureName,
      },
    };

    document.getElementById("requestJSON").textContent = JSON.stringify(
      requestObj,
      null,
      2
    );
  }

  document
    .getElementById("policyForm")
    .addEventListener("submit", async (e) => {
      e.preventDefault();

      let insureName = document.getElementById("insureName").value;
      let uniqueID = "56804752-470b-4d04-8813-88e25fb6672a"; // mock
      // let uniqueID = generateUniqueID();
      let now = formatDate(new Date().toISOString());

      let requestData = {
        headerData: {
          messageID: uniqueID,
          sentDateTime: now,
        },
        requestRecord: {
          insureName: insureName,
        },
      };

      let response = await fetch("/api/fetch", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(requestData),
      });

      let responseData = await response.json();
      document.getElementById("responseJSON").textContent = JSON.stringify(
        responseData,
        null,
        2
      );
    });
  const formatDate = (dateTime) => {
    const date = new Date(dateTime);
    const formattedDate = date.toISOString().split("T")[0];
    const formattedTime = date.toTimeString().split(" ")[0];
    return `${formattedDate} ${formattedTime.split(":").slice(0, 3).join(":")}`;
  };
</script>
